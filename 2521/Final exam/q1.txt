Question 1

(a) What is the maximum input size that can be processed? Justify your
    answer.
    Total time run for original is 2^10 or 1024. Therefore maximum time run for computer 1000 times faster
    in a day will be 1024000. Therefore maximum input size will be log(1024000) or 19.97 (2 sig fig).


(b) Which of the two algorithms is more efficient? Justify your answer.
    They effectively do the same thing. The first algorithm will take 1 comparison to split n into two n/2
    spaces and then for each space will take again 1 comparison to split it in half, effectively needing
    three comparisons total to split n into quarters, which is exactly what 'quad search' does.


(c) What are the time complexities of fnA() and fnB() in terms of a and
    b? Justify your answer.

    fnA() = O(b - a)
    O(1) terms will be repeatedly run until a is equal to b. Since a is incremented
    by 1 with each pass, it will take b - a time until the base case is hit.

    fnB() = O((b - a)^2)
    fnA() will be repeatedly run until a is equal to b, like in fnA(). Therefore a function
    that runs in O(b - a) will be run b - a times, making total run time be (b - a) * (b - a) or
    (b - a)^2.